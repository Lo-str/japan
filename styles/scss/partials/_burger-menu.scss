@use "./mixins" as m;
@use "./vars" as v;

.burger {
  position: relative;

  &__toggle {
    position: absolute;
    inline-size: 1px;
    block-size: 1px;
    overflow: hidden;
    clip: rect(0 0 0 0);
    white-space: nowrap;
    border: 0;
    appearance: none;
  }

  &__drop {
    display: flex;
    flex-direction: column;
    gap: v.$rem-5;
    cursor: pointer;
    /* optional: width: v.$rem-48; */
  }

  &__line {
    width: v.$rem-48;
    height: v.$rem-4;
    background-color: v.$fc;
    @include m.transition;
  }

  /* CLOSED BY DEFAULT (do NOT re-set display later in this block) */
  &__list {
    display: none;
    position: absolute;
    top: 0;
    left: 0;          /* ensure full-width overlay anchors to left too */
    right: 100;
    width: 100%;
    height: auto;     /* or 100vh if you want full screen */
    background-color: v.$bg-c;
    padding: v.$rem-20 0;
    z-index: 1000;
    list-style: none;

    /* layout when open (applied via the checked selector below) */
    // flex-direction: column;
    // align-items: center;
    // justify-content: center;
    gap: v.$rem-20;
  }

  &__link a {
    display: block;
    font-family: v.$ff-nav;
    color: #FFFFFF;
    text-align: center;
    text-decoration: none;
    font-size: clamp(v.$rem-20, 5vw, v.$rem-32);
    @include m.transition;
    cursor: pointer;

    &:hover { @include m.hover; }
  }

  /* OPEN STATE: only here we switch to flex (so itâ€™s hidden otherwise) */
  &__toggle:checked ~ .burger__list {
    display: flex;
  }
}

/* Small screens: show burger, hide desktop list */
@media (max-width: v.$vp-small) {
  .header__list { display: none; }

  .burger {
    // display: flex;
    // flex-direction: column;
    gap: v.$rem-10;
    cursor: pointer;
    z-index: 1100;

    /* REMOVE hover scaling from the entire container to prevent shifting */
    /* @include m.transition;  keep if you like, harmless */
    /* no @include m.hover here */
  }
}

/* Larger screens: hide burger */
@media (min-width: v.$vp-small) {
  .burger { display: none; }
}
